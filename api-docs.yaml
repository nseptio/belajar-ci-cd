openapi: 3.0.0
info:
  title: Question API
  version: 1.0.0
  description: API untuk mengelola pertanyaan dalam sebuah section.

servers:
  - url: https://api.example.com
    description: Production server

components:
  schemas:
    Question:
      type: object
      properties:
        section_id:
          type: string
          example: 605c72d2b4f1a46a638b4567
        question_number:
          type: integer
          example: 1
        title:
          type: string
          example: "What is your favorite food?"
        type:
          type: string
          enum: [text_answer, multiple_answer]
          example: text_answer
        is_required:
          type: boolean
          example: true
        list_of_options:
          type: array
          items:
            type: string
          example: ["Option 1", "Option 2"]
    
    Section:
      type: object
      properties:
        section_number:
          type: integer
          example: 1
        title:
          type: string
          example: "Demographic Information"
        description:
          type: string
          example: "Questions related to demographics"
        survey_id:
          type: string
          example: 605c72d2b4f1a46a638b1234

  responses:
    QuestionResponse:
      description: A question object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Question'

    SectionResponse:
      description: A section object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Section'

paths:
  /questions:
    post:
      summary: Create a new question
      tags:
        - Questions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '201':
          description: Question created successfully
          $ref: '#/components/responses/QuestionResponse'
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /questions/{id}:
    get:
      summary: Get a question by ID
      tags:
        - Questions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/QuestionResponse'
        '404':
          description: Question not found

    put:
      summary: Update a question by ID
      tags:
        - Questions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '200':
          description: Question updated successfully
          $ref: '#/components/responses/QuestionResponse'
        '400':
          description: Invalid input
        '404':
          description: Question not found

    delete:
      summary: Delete a question by ID
      tags:
        - Questions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Question deleted successfully
        '404':
          description: Question not found

  /sections:
    post:
      summary: Create a new section
      tags:
        - Sections
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
      responses:
        '201':
          description: Section created successfully
          $ref: '#/components/responses/SectionResponse'
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /sections/{id}:
    get:
      summary: Get a section by ID
      tags:
        - Sections
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/SectionResponse'
        '404':
          description: Section not found

    put:
      summary: Update a section by ID
      tags:
        - Sections
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
      responses:
        '200':
          description: Section updated successfully
          $ref: '#/components/responses/SectionResponse'
        '400':
          description: Invalid input
        '404':
          description: Section not found

    delete:
      summary: Delete a section by ID
      tags:
        - Sections
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Section deleted successfully
        '404':
          description: Section not found
