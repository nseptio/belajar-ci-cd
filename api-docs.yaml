openapi: 3.0.0
info:
  title: Indonesian Student Survey API
  version: 1.0.0
  description: | -
    API untuk mengelola survey mahasiswa di Indonesia. API ini memungkinkan pengguna untuk membuat, mengedit, dan menghapus pertanyaan, section, dan survey. Pengguna juga dapat melihat daftar pertanyaan, section, dan survey yang tersedia.

    Note: API ini hanya dapat diakses dengan menggunakan VPN Dikti.

servers:
  - url: http://10.1.99.206/api/v1/
<<<<<<< HEAD
    description: Staging server, make sure to use Dikti VPN to access this server
=======
>>>>>>> be5dc72 (test update api docs)

tags:
  - name: Questions
    description: API untuk mengelola pertanyaan
  - name: Sections
    description: API untuk mengelola section
  - name: Surveys
    description: API untuk mengelola survey
  - name: Students
    description: API untuk mengelola mahasiswa
  - name: staffs
    description: API untuk mengelola staff
  - name: admin
    description: API untuk mengelola admin

components:
  schemas:
    Question:
      type: object
      properties:
        id:
          type: string
        section_id:
          type: string
          example: 605c72d2b4f1a46a638b4567
        question_number:
          type: integer
          example: 1
        title:
          type: string
          example: "What is your favorite food?"
        type:
          type: string
          enum: [text_answer, multiple_answer]
          example: text_answer
        is_required:
          type: boolean
          example: true
        list_of_options:
          type: array
          items:
            type: string
          example: ["Option 1", "Option 2"]

    Section:
      type: object
      properties:
        id:
          type: string
        section_number:
          type: integer
          example: 1
        title:
          type: string
          example: "Demographic Information"
        description:
          type: string
          example: "Questions related to demographics"
        survey_id:
          type: string
          example: 605c72d2b4f1a46a638b1234

    Survey:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
          example: "Survey 1"
        description:
          type: string
          example: "Survey for last-year students"
        start_date:
          type: string
          format: date
          example: "2025-03-25T00:00:00.000Z"
        end_date:
          type: string
          format: date
          example: "2025-03-30T00:00:00.000Z"
        is_published:
          type: boolean
          example: true

    MessageResponse:
      type: object
      properties:
        message:
          type: string
          example: "Request processed successfully"

    QuestionListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Question'

    SectionListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Section'

    SurveyListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Survey'

paths:
  /questions:
    post:
      summary: Create a new question
      tags:
        - Questions
      requestBody:
        description: Data untuk membuat pertanyaan baru
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '201':
          description: Question created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Question created successfully"
                  data:
                    $ref: '#/components/schemas/Question'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Invalid input: missing required fields"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Failed to create the question due to server error"

  /questions/{id}:
    get:
      summary: Get a question by ID
      tags:
        - Questions
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the question
          schema:
            type: string
            example: 605c72d2b4f1a46a638b4567
      responses:
        '200':
          description: Question retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Question retrieved successfully"
                  data:
                    $ref: '#/components/schemas/Question'
        '404':
          description: Question not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Question with the given ID not found"

    put:
      summary: Update a question by ID
      tags:
        - Questions
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the question
          schema:
            type: string
            example: 605c72d2b4f1a46a638b4567
      requestBody:
        description: Data untuk memperbarui pertanyaan
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '200':
          description: Question updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Question updated successfully"
                  data:
                    $ref: '#/components/schemas/Question'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Invalid input: data validation failed"
        '404':
          description: Question not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Question with the given ID not found"

    delete:
      summary: Delete a question by ID
      tags:
        - Questions
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the question
          schema:
            type: string
            example: 605c72d2b4f1a46a638b4567
      responses:
        '200':
          description: Question deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Question deleted successfully"
        '404':
          description: Question not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Question with the given ID not found"

  /sections:
    post:
      summary: Create a new section
      tags:
        - Sections
      requestBody:
        description: Data untuk membuat section baru
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
      responses:
        '201':
          description: Section created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Section created successfully"
                  data:
                    $ref: '#/components/schemas/Section'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Invalid input: missing required fields"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Failed to create the section due to server error"

  /sections/{id}:
    get:
      summary: Get a section by ID
      tags:
        - Sections
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the section
          schema:
            type: string
            example: 605c72d2b4f1a46a638b4567
      responses:
        '200':
          description: Section retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Section retrieved successfully"
                  data:
                    $ref: '#/components/schemas/Section'
        '404':
          description: Section not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Section with the given ID not found"

    put:
      summary: Update a section by ID
      tags:
        - Sections
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the section
          schema:
            type: string
            example: 605c72d2b4f1a46a638b4567
      requestBody:
        description: Data untuk memperbarui section
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
      responses:
        '200':
          description: Section updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Section updated successfully"
                  data:
                    $ref: '#/components/schemas/Section'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Invalid input: data validation failed"
        '404':
          description: Section not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Section with the given ID not found"

    delete:
      summary: Delete a section by ID
      tags:
        - Sections
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the section
          schema:
            type: string
            example: 605c72d2b4f1a46a638b4567
      responses:
        '200':
          description: Section deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Section deleted successfully"
        '404':
          description: Section not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Section with the given ID not found"

  /surveys:
    post:
      summary: Create a new survey
      tags:
        - Surveys
      requestBody:
        description: Data untuk membuat survey baru
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
      responses:
        '201':
          description: Survey created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Survey created successfully"
                  data:
                    $ref: '#/components/schemas/Survey'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Invalid input: missing required fields"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Failed to create the survey due to server error"
    get:
      summary: Get all surveys
      tags:
        - Surveys
      responses:
        '200':
          description: Surveys retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyListResponse'
        '404':
          description: Surveys not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "No surveys found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Failed to retrieve surveys due to server error"
  /surveys/{id}:
    get:
      summary: Get a survey by ID
      tags:
        - Surveys
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the survey
          schema:
            type: string
            example: 605c72d2b4f1a46a638b4567
      responses:
        '200':
          description: Survey retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Survey retrieved successfully"
                  data:
                    $ref: '#/components/schemas/Survey'
        '404':
          description: Survey not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Survey with the given ID not found"

    put:
      summary: Update a survey by ID
      tags:
        - Surveys
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the survey
          schema:
            type: string
            example: 605c72d2b4f1a46a638b4567
      requestBody:
        description: Data untuk memperbarui survey
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
      responses:
        '200':
          description: Survey updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Survey updated successfully"
                  data:
                    $ref: '#/components/schemas/Survey'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Invalid input: data validation failed"
        '404':
          description: Survey not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Survey with the given ID not found"
    delete:
      summary: Delete a survey by ID
      tags:
        - Surveys
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the survey
          schema:
            type: string
            example: 605c72d2b4f1a46a638b4567
      responses:
        '200':
          description: Survey deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Survey deleted successfully"
        '404':
          description: Survey not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
              example:
                message: "Survey with the given ID not found"