openapi: 3.0.0
info:
  title: Question API
  version: 1.0.0
  description: API untuk mengelola pertanyaan dalam sebuah section.

servers:
  - url: http://my-be-api/api/v1/

components:
  schemas:
    Question:
      type: object
      properties:
        id:
          type: string
        section_id:
          type: string
        question_number:
          type: integer
        title:
          type: string
        type:
          type: string
          enum: [text_answer, multiple_answer]
        is_required:
          type: boolean
        list_of_options:
          type: array
          items:
            type: string
      example:
        id: "605c72d2b4f1a46a638b4567"
        section_id: "605c72d2b4f1a46a638b4567"
        question_number: 1
        title: "What is your favorite food?"
        type: "text_answer"
        is_required: true
        list_of_options: ["Option 1", "Option 2"]

    Section:
      type: object
      properties:
        id:
          type: string
        section_number:
          type: integer
        title:
          type: string
        description:
          type: string
        survey_id:
          type: string
      example:
        id: "605c72d2b4f1a46a638b1234"
        section_number: 1
        title: "Demographic Information"
        description: "Questions related to demographics"
        survey_id: "605c72d2b4f1a46a638b1234"

    CreateQuestionRequest:
      type: object
      properties:
        section_id:
          type: string
        question_number:
          type: integer
        title:
          type: string
        type:
          type: string
          enum: [text_answer, multiple_answer]
        is_required:
          type: boolean
        list_of_options:
          type: array
          items:
            type: string
      example:
        section_id: "605c72d2b4f1a46a638b4567"
        question_number: 1
        title: "What is your favorite food?"
        type: "text_answer"
        is_required: true
        list_of_options: ["Option 1", "Option 2"]

    CreateSectionRequest:
      type: object
      properties:
        section_number:
          type: integer
        title:
          type: string
        description:
          type: string
        survey_id:
          type: string
      example:
        section_number: 1
        title: "Demographic Information"
        description: "Questions related to demographics"
        survey_id: "605c72d2b4f1a46a638b1234"

    ResponseMessage:
      type: object
      properties:
        message:
          type: string

    QuestionResponse:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: '#/components/schemas/Question'

    SectionResponse:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: '#/components/schemas/Section'

    QuestionsArrayResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/Question'

    SectionsArrayResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/Section'

paths:
  /questions:
    post:
      summary: Create a new question
      tags:
        - Questions
      requestBody:
        description: Data untuk membuat pertanyaan baru
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuestionRequest'
      responses:
        '201':
          description: Question created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'

  /questions/{id}:
    get:
      summary: Get a question by ID
      tags:
        - Questions
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the question
          schema:
            type: string
            example: 605c72d2b4f1a46a638b4567
      responses:
        '200':
          description: Question retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponse'
        '404':
          description: Question not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'

    put:
      summary: Update a question by ID
      tags:
        - Questions
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the question
          schema:
            type: string
            example: 605c72d2b4f1a46a638b4567
      requestBody:
        description: Data untuk memperbarui pertanyaan
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuestionRequest'
      responses:
        '200':
          description: Question updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '404':
          description: Question not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'

    delete:
      summary: Delete a question by ID
      tags:
        - Questions
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the question
          schema:
            type: string
            example: 605c72d2b4f1a46a638b4567
      responses:
        '200':
          description: Question deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '404':
          description: Question not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'

  /sections:
    post:
      summary: Create a new section
      tags:
        - Sections
      requestBody:
        description: Data untuk membuat section baru
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSectionRequest'
      responses:
        '201':
          description: Section created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'

    get:
      summary: Get all sections
      tags:
        - Sections
      responses:
        '200':
          description: Sections retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionsArrayResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'

  /sections/{id}:
    get:
      summary: Get a section by ID
      tags:
        - Sections
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the section
          schema:
            type: string
            example: 605c72d2b4f1a46a638b4567
      responses:
        '200':
          description: Section retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionResponse'
        '404':
          description: Section not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'

    put:
      summary: Update a section by ID
      tags:
        - Sections
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the section
          schema:
            type: string
            example: 605c72d2b4f1a46a638b4567
      requestBody:
        description: Data untuk memperbarui section
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSectionRequest'
      responses:
        '200':
          description: Section updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '404':
          description: Section not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'

    delete:
      summary: Delete a section by ID
      tags:
        - Sections
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the section
          schema:
            type: string
            example: 605c72d2b4f1a46a638b4567
      responses:
        '200':
          description: Section deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '404':
          description: Section not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
