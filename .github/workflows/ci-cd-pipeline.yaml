name: CI/CD Pipeline

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.3'

      - name: Run tests
        run: go test ./...
      
      - name: Install gocover-cobertura
        run: |
            go get github.com/boumenot/gocover-cobertura && go install github.com/boumenot/gocover-cobertura
      # Install gotestfmt on the VM running the action.
      - name: Set up gotestfmt
        uses: GoTestTools/gotestfmt-action@v2
        with:
          # Optional: pass the gotestfmt version you want to run. 
          version: v2.0.0
          # Optional: pass an organization name and repo to use a fork
          org: GoTestTools
          repo: gotestfmt
          

  sast-check:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on

    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.3'
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...

  # Build and publish Docker image
  publish:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Make registry repo to lowercase
        id: lower-repo
        shell: pwsh
        run: |
          "::set-output name=repository::$($env:GITHUB_REPOSITORY.ToLowerInvariant())"

      # Build Docker image with the repository name and GitHub SHA
      # TODO: add arguments to the docker build command for environment variables
      # The environment variables should be passed to the Dockerfile
      # Env variables include the database, service, and other configurations
      - name: Build Docker image
        run: docker build -t ghcr.io/${{ steps.lower-repo.outputs.repository }}:$GITHUB_SHA .

      # Tag Docker image with the appropriate branch name (prod/staging/main)
      - name: Tag Docker image
        run: docker tag ghcr.io/${{ steps.lower-repo.outputs.repository }}:$GITHUB_SHA ghcr.io/${{ steps.lower-repo.outputs.repository }}:${{ github.ref_name }}

      - name: Push Docker image
        run: docker push ghcr.io/${{ steps.lower-repo.outputs.repository }}:${{ github.ref_name }}

  # TODO: Deploy the Docker image to VPS 
  # Currently, there is no VPS to deploy the Docker image to